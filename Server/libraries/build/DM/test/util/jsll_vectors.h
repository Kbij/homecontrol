// file generated by jsll_gen.c on a system with 64-bit integers

#define SHIFT_BITS 13
typedef struct testrec_t {
   JSInt64 a, b, add, sub, mul, and, or, xor, not, neg;
   JSInt64 shl, shr, ushr;
   int32_t l2i;
   uint32_t l2ui;
   JSInt64 i2l;
   JSUint64 ui2l;
   const char *hexstr, *decstr, *udecstr;
   bool_t gtu, ltu, gt, lt;
} testrec_t;

const testrec_t tests[] = {
{ // record 0
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a
	JSLL_INIT( 0xd716b8b5, 0x88029869 ),	// b
	JSLL_INIT( 0xd716b8b5, 0x88029869 ),	// a + b
	JSLL_INIT( 0x28e9474a, 0x77fd6797 ),	// a - b
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a * b
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a & b
	JSLL_INIT( 0xd716b8b5, 0x88029869 ),	// a | b
	JSLL_INIT( 0xd716b8b5, 0x88029869 ),	// a ^ b
	JSLL_INIT( 0xffffffff, 0xffffffff ),	// ~a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// -a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a << 13
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00000000, 0x00000000 ),	// a >> 13 (unsigned)
	0, UINT32_C(0),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x00000000 ),	// (uint64_t)(uint32_t)a
	"0000000000000000",	// a (hexadecimal)
	"0",	// a (signed decimal)
	"0",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 1
	JSLL_INIT( 0xcc66e456, 0xf59a5cff ),	// a
	JSLL_INIT( 0x55d14ac1, 0x7c7a1f29 ),	// b
	JSLL_INIT( 0x22382f18, 0x72147c28 ),	// a + b
	JSLL_INIT( 0x76959995, 0x79203dd6 ),	// a - b
	JSLL_INIT( 0x81f9bc85, 0xdc81c5d7 ),	// a * b
	JSLL_INIT( 0x44404040, 0x741a1c29 ),	// a & b
	JSLL_INIT( 0xddf7eed7, 0xfdfa5fff ),	// a | b
	JSLL_INIT( 0x99b7ae97, 0x89e043d6 ),	// a ^ b
	JSLL_INIT( 0x33991ba9, 0x0a65a300 ),	// ~a
	JSLL_INIT( 0x33991ba9, 0x0a65a301 ),	// -a
	JSLL_INIT( 0xdc8adeb3, 0x4b9fe000 ),	// a << 13
	JSLL_INIT( 0xfffe6337, 0x22b7acd2 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00066337, 0x22b7acd2 ),	// a >> 13 (unsigned)
	-174433025, UINT32_C(4120534271),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xf59a5cff ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xf59a5cff ),	// (uint64_t)(uint32_t)a
	"cc66e456f59a5cff",	// a (hexadecimal)
	"-3718033380208911105",	// a (signed decimal)
	"14728710693500640511",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 2
	JSLL_INIT( 0x8dd0c481, 0xa938d7ab ),	// a
	JSLL_INIT( 0x5d62c253, 0x98dda9e3 ),	// b
	JSLL_INIT( 0xeb3386d5, 0x4216818e ),	// a + b
	JSLL_INIT( 0x306e022e, 0x105b2dc8 ),	// a - b
	JSLL_INIT( 0xd1943040, 0x4a661fa1 ),	// a * b
	JSLL_INIT( 0x0d40c001, 0x881881a3 ),	// a & b
	JSLL_INIT( 0xddf2c6d3, 0xb9fdffeb ),	// a | b
	JSLL_INIT( 0xd0b206d2, 0x31e57e48 ),	// a ^ b
	JSLL_INIT( 0x722f3b7e, 0x56c72854 ),	// ~a
	JSLL_INIT( 0x722f3b7e, 0x56c72855 ),	// -a
	JSLL_INIT( 0x18903527, 0x1af56000 ),	// a << 13
	JSLL_INIT( 0xfffc6e86, 0x240d49c6 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00046e86, 0x240d49c6 ),	// a >> 13 (unsigned)
	-1455892565, UINT32_C(2839074731),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xa938d7ab ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xa938d7ab ),	// (uint64_t)(uint32_t)a
	"8dd0c481a938d7ab",	// a (hexadecimal)
	"-8227860458036996181",	// a (signed decimal)
	"10218883615672555435",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 3
	JSLL_INIT( 0xea8b93d3, 0x5c4c62c2 ),	// a
	JSLL_INIT( 0x24405d19, 0x2a0e231b ),	// b
	JSLL_INIT( 0x0ecbf0ec, 0x865a85dd ),	// a + b
	JSLL_INIT( 0xc64b36ba, 0x323e3fa7 ),	// a - b
	JSLL_INIT( 0x5078303c, 0x682af076 ),	// a * b
	JSLL_INIT( 0x20001111, 0x080c2202 ),	// a & b
	JSLL_INIT( 0xeecbdfdb, 0x7e4e63db ),	// a | b
	JSLL_INIT( 0xcecbceca, 0x764241d9 ),	// a ^ b
	JSLL_INIT( 0x15746c2c, 0xa3b39d3d ),	// ~a
	JSLL_INIT( 0x15746c2c, 0xa3b39d3e ),	// -a
	JSLL_INIT( 0x727a6b89, 0x8c584000 ),	// a << 13
	JSLL_INIT( 0xffff545c, 0x9e9ae263 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0007545c, 0x9e9ae263 ),	// a >> 13 (unsigned)
	1548509890, UINT32_C(1548509890),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x5c4c62c2 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x5c4c62c2 ),	// (uint64_t)(uint32_t)a
	"ea8b93d35c4c62c2",	// a (hexadecimal)
	"-1545979511075740990",	// a (signed decimal)
	"16900764562633810626",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 4
	JSLL_INIT( 0x3e2dc241, 0x34d6438d ),	// a
	JSLL_INIT( 0x281c2dbe, 0x35f6f92e ),	// b
	JSLL_INIT( 0x6649efff, 0x6acd3cbb ),	// a + b
	JSLL_INIT( 0x16119482, 0xfedf4a5f ),	// a - b
	JSLL_INIT( 0x251561a3, 0x00b24856 ),	// a * b
	JSLL_INIT( 0x280c0000, 0x34d6410c ),	// a & b
	JSLL_INIT( 0x3e3defff, 0x35f6fbaf ),	// a | b
	JSLL_INIT( 0x1631efff, 0x0120baa3 ),	// a ^ b
	JSLL_INIT( 0xc1d23dbe, 0xcb29bc72 ),	// ~a
	JSLL_INIT( 0xc1d23dbe, 0xcb29bc73 ),	// -a
	JSLL_INIT( 0xb848269a, 0xc871a000 ),	// a << 13
	JSLL_INIT( 0x0001f16e, 0x1209a6b2 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0001f16e, 0x1209a6b2 ),	// a >> 13 (unsigned)
	886457229, UINT32_C(886457229),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x34d6438d ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x34d6438d ),	// (uint64_t)(uint32_t)a
	"3e2dc24134d6438d",	// a (hexadecimal)
	"4480450789618631565",	// a (signed decimal)
	"4480450789618631565",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 5
	JSLL_INIT( 0x1bda9b1a, 0xde22d79f ),	// a
	JSLL_INIT( 0x834fe2fa, 0x5604fb66 ),	// b
	JSLL_INIT( 0x9f2a7e15, 0x3427d305 ),	// a + b
	JSLL_INIT( 0x988ab820, 0x881ddc39 ),	// a - b
	JSLL_INIT( 0x79aa40c1, 0x73c6ce5a ),	// a * b
	JSLL_INIT( 0x034a821a, 0x5600d306 ),	// a & b
	JSLL_INIT( 0x9bdffbfa, 0xde26ffff ),	// a | b
	JSLL_INIT( 0x989579e0, 0x88262cf9 ),	// a ^ b
	JSLL_INIT( 0xe42564e5, 0x21dd2860 ),	// ~a
	JSLL_INIT( 0xe42564e5, 0x21dd2861 ),	// -a
	JSLL_INIT( 0x53635bc4, 0x5af3e000 ),	// a << 13
	JSLL_INIT( 0x0000ded4, 0xd8d6f116 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0000ded4, 0xd8d6f116 ),	// a >> 13 (unsigned)
	-568141921, UINT32_C(3726825375),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xde22d79f ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xde22d79f ),	// (uint64_t)(uint32_t)a
	"1bda9b1ade22d79f",	// a (hexadecimal)
	"2007087123645257631",	// a (signed decimal)
	"2007087123645257631",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 6
	JSLL_INIT( 0x4bc8ebff, 0x9328d7b7 ),	// a
	JSLL_INIT( 0x7e5b08e6, 0x09c930a3 ),	// b
	JSLL_INIT( 0xca23f4e5, 0x9cf2085a ),	// a + b
	JSLL_INIT( 0xcd6de319, 0x895fa714 ),	// a - b
	JSLL_INIT( 0x7281b063, 0x2922a985 ),	// a * b
	JSLL_INIT( 0x4a4808e6, 0x010810a3 ),	// a & b
	JSLL_INIT( 0x7fdbebff, 0x9be9f7b7 ),	// a | b
	JSLL_INIT( 0x3593e319, 0x9ae1e714 ),	// a ^ b
	JSLL_INIT( 0xb4371400, 0x6cd72848 ),	// ~a
	JSLL_INIT( 0xb4371400, 0x6cd72849 ),	// -a
	JSLL_INIT( 0x1d7ff265, 0x1af6e000 ),	// a << 13
	JSLL_INIT( 0x00025e47, 0x5ffc9946 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00025e47, 0x5ffc9946 ),	// a >> 13 (unsigned)
	-1826039881, UINT32_C(2468927415),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x9328d7b7 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x9328d7b7 ),	// (uint64_t)(uint32_t)a
	"4bc8ebff9328d7b7",	// a (hexadecimal)
	"5460874031104841655",	// a (signed decimal)
	"5460874031104841655",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 7
	JSLL_INIT( 0xc577f1d8, 0xc3b1895d ),	// a
	JSLL_INIT( 0x66751017, 0xc75aa858 ),	// b
	JSLL_INIT( 0x2bed01f0, 0x8b0c31b5 ),	// a + b
	JSLL_INIT( 0x5f02e1c0, 0xfc56e105 ),	// a - b
	JSLL_INIT( 0xa14f587c, 0x5cde3ff8 ),	// a * b
	JSLL_INIT( 0x44751010, 0xc3108858 ),	// a & b
	JSLL_INIT( 0xe777f1df, 0xc7fba95d ),	// a | b
	JSLL_INIT( 0xa302e1cf, 0x04eb2105 ),	// a ^ b
	JSLL_INIT( 0x3a880e27, 0x3c4e76a2 ),	// ~a
	JSLL_INIT( 0x3a880e27, 0x3c4e76a3 ),	// -a
	JSLL_INIT( 0xfe3b1876, 0x312ba000 ),	// a << 13
	JSLL_INIT( 0xfffe2bbf, 0x8ec61d8c ),	// a >> 13 (signed)
	JSLL_INIT( 0x00062bbf, 0x8ec61d8c ),	// a >> 13 (unsigned)
	-1011775139, UINT32_C(3283192157),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xc3b1895d ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xc3b1895d ),	// (uint64_t)(uint32_t)a
	"c577f1d8c3b1895d",	// a (hexadecimal)
	"-4217636612710758051",	// a (signed decimal)
	"14229107460998793565",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 8
	JSLL_INIT( 0x5a3ad2b1, 0xfa00a8d4 ),	// a
	JSLL_INIT( 0x11db02d5, 0xd005d0cd ),	// b
	JSLL_INIT( 0x6c15d587, 0xca0679a1 ),	// a + b
	JSLL_INIT( 0x485fcfdc, 0x29fad807 ),	// a - b
	JSLL_INIT( 0x4a1fdf39, 0x47d771c4 ),	// a * b
	JSLL_INIT( 0x101a0291, 0xd00080c4 ),	// a & b
	JSLL_INIT( 0x5bfbd2f5, 0xfa05f8dd ),	// a | b
	JSLL_INIT( 0x4be1d064, 0x2a057819 ),	// a ^ b
	JSLL_INIT( 0xa5c52d4e, 0x05ff572b ),	// ~a
	JSLL_INIT( 0xa5c52d4e, 0x05ff572c ),	// -a
	JSLL_INIT( 0x5a563f40, 0x151a8000 ),	// a << 13
	JSLL_INIT( 0x0002d1d6, 0x958fd005 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0002d1d6, 0x958fd005 ),	// a >> 13 (unsigned)
	-100620076, UINT32_C(4194347220),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xfa00a8d4 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xfa00a8d4 ),	// (uint64_t)(uint32_t)a
	"5a3ad2b1fa00a8d4",	// a (hexadecimal)
	"6501740673908123860",	// a (signed decimal)
	"6501740673908123860",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 9
	JSLL_INIT( 0x1607d916, 0xcb7f9eb4 ),	// a
	JSLL_INIT( 0xe3e66400, 0x8e47c40e ),	// b
	JSLL_INIT( 0xf9ee3d17, 0x59c762c2 ),	// a + b
	JSLL_INIT( 0x32217516, 0x3d37daa6 ),	// a - b
	JSLL_INIT( 0x1c8cdd79, 0xb2687dd8 ),	// a * b
	JSLL_INIT( 0x02064000, 0x8a478404 ),	// a & b
	JSLL_INIT( 0xf7e7fd16, 0xcf7fdebe ),	// a | b
	JSLL_INIT( 0xf5e1bd16, 0x45385aba ),	// a ^ b
	JSLL_INIT( 0xe9f826e9, 0x3480614b ),	// ~a
	JSLL_INIT( 0xe9f826e9, 0x3480614c ),	// -a
	JSLL_INIT( 0xfb22d96f, 0xf3d68000 ),	// a << 13
	JSLL_INIT( 0x0000b03e, 0xc8b65bfc ),	// a >> 13 (signed)
	JSLL_INIT( 0x0000b03e, 0xc8b65bfc ),	// a >> 13 (unsigned)
	-880828748, UINT32_C(3414138548),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xcb7f9eb4 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xcb7f9eb4 ),	// (uint64_t)(uint32_t)a
	"1607d916cb7f9eb4",	// a (hexadecimal)
	"1587476085598035636",	// a (signed decimal)
	"1587476085598035636",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 10
	JSLL_INIT( 0x05200192, 0x00878641 ),	// a
	JSLL_INIT( 0x3cff967c, 0x30b88ddc ),	// b
	JSLL_INIT( 0x421f980e, 0x3140141d ),	// a + b
	JSLL_INIT( 0xc8206b15, 0xcfcef865 ),	// a - b
	JSLL_INIT( 0x2a76abd3, 0xc8212cdc ),	// a * b
	JSLL_INIT( 0x04200010, 0x00808440 ),	// a & b
	JSLL_INIT( 0x3dff97fe, 0x30bf8fdd ),	// a | b
	JSLL_INIT( 0x39df97ee, 0x303f0b9d ),	// a ^ b
	JSLL_INIT( 0xfadffe6d, 0xff7879be ),	// ~a
	JSLL_INIT( 0xfadffe6d, 0xff7879bf ),	// -a
	JSLL_INIT( 0x00324010, 0xf0c82000 ),	// a << 13
	JSLL_INIT( 0x00002900, 0x0c90043c ),	// a >> 13 (signed)
	JSLL_INIT( 0x00002900, 0x0c90043c ),	// a >> 13 (unsigned)
	8881729, UINT32_C(8881729),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x00878641 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x00878641 ),	// (uint64_t)(uint32_t)a
	"0520019200878641",	// a (hexadecimal)
	"369296896030115393",	// a (signed decimal)
	"369296896030115393",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 11
	JSLL_INIT( 0xd9d5c32c, 0x5f86dde9 ),	// a
	JSLL_INIT( 0x600df12c, 0x163bc241 ),	// b
	JSLL_INIT( 0x39e3b458, 0x75c2a02a ),	// a + b
	JSLL_INIT( 0x79c7d200, 0x494b1ba8 ),	// a - b
	JSLL_INIT( 0x1f8946db, 0xa01bea29 ),	// a * b
	JSLL_INIT( 0x4005c12c, 0x1602c041 ),	// a & b
	JSLL_INIT( 0xf9ddf32c, 0x5fbfdfe9 ),	// a | b
	JSLL_INIT( 0xb9d83200, 0x49bd1fa8 ),	// a ^ b
	JSLL_INIT( 0x262a3cd3, 0xa0792216 ),	// ~a
	JSLL_INIT( 0x262a3cd3, 0xa0792217 ),	// -a
	JSLL_INIT( 0xb8658bf0, 0xdbbd2000 ),	// a << 13
	JSLL_INIT( 0xfffeceae, 0x1962fc36 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0006ceae, 0x1962fc36 ),	// a >> 13 (unsigned)
	1602674153, UINT32_C(1602674153),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x5f86dde9 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x5f86dde9 ),	// (uint64_t)(uint32_t)a
	"d9d5c32c5f86dde9",	// a (hexadecimal)
	"-2750077402091168279",	// a (signed decimal)
	"15696666671618383337",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 12
	JSLL_INIT( 0xaaefb5c9, 0xb3032367 ),	// a
	JSLL_INIT( 0x7009733a, 0xd625c67e ),	// b
	JSLL_INIT( 0x1af92904, 0x8928e9e5 ),	// a + b
	JSLL_INIT( 0x3ae6428e, 0xdcdd5ce9 ),	// a - b
	JSLL_INIT( 0xb09d431c, 0xc0d016b2 ),	// a * b
	JSLL_INIT( 0x20093108, 0x92010266 ),	// a & b
	JSLL_INIT( 0xfaeff7fb, 0xf727e77f ),	// a | b
	JSLL_INIT( 0xdae6c6f3, 0x6526e519 ),	// a ^ b
	JSLL_INIT( 0x55104a36, 0x4cfcdc98 ),	// ~a
	JSLL_INIT( 0x55104a36, 0x4cfcdc99 ),	// -a
	JSLL_INIT( 0xf6b93660, 0x646ce000 ),	// a << 13
	JSLL_INIT( 0xfffd577d, 0xae4d9819 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0005577d, 0xae4d9819 ),	// a >> 13 (unsigned)
	-1291639961, UINT32_C(3003327335),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xb3032367 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xb3032367 ),	// (uint64_t)(uint32_t)a
	"aaefb5c9b3032367",	// a (hexadecimal)
	"-6129480689931574425",	// a (signed decimal)
	"12317263383777977191",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 13
	JSLL_INIT( 0xb890714a, 0x18724adc ),	// a
	JSLL_INIT( 0xa3d58b87, 0xcfa1d78f ),	// b
	JSLL_INIT( 0x5c65fcd1, 0xe814226b ),	// a + b
	JSLL_INIT( 0x14bae5c2, 0x48d0734d ),	// a - b
	JSLL_INIT( 0xe1293b58, 0x9d1294e4 ),	// a * b
	JSLL_INIT( 0xa0900102, 0x0820428c ),	// a & b
	JSLL_INIT( 0xbbd5fbcf, 0xdff3dfdf ),	// a | b
	JSLL_INIT( 0x1b45facd, 0xd7d39d53 ),	// a ^ b
	JSLL_INIT( 0x476f8eb5, 0xe78db523 ),	// ~a
	JSLL_INIT( 0x476f8eb5, 0xe78db524 ),	// -a
	JSLL_INIT( 0x0e29430e, 0x495b8000 ),	// a << 13
	JSLL_INIT( 0xfffdc483, 0x8a50c392 ),	// a >> 13 (signed)
	JSLL_INIT( 0x0005c483, 0x8a50c392 ),	// a >> 13 (unsigned)
	410143452, UINT32_C(410143452),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x18724adc ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x18724adc ),	// (uint64_t)(uint32_t)a
	"b890714a18724adc",	// a (hexadecimal)
	"-5147489811032814884",	// a (signed decimal)
	"13299254262676736732",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 14
	JSLL_INIT( 0x2a7d7025, 0xc9024e2a ),	// a
	JSLL_INIT( 0xd446af90, 0x99fed43b ),	// b
	JSLL_INIT( 0xfec41fb6, 0x63012265 ),	// a + b
	JSLL_INIT( 0x5636c095, 0x2f0379ef ),	// a - b
	JSLL_INIT( 0x529ea1cb, 0xe3eecbae ),	// a * b
	JSLL_INIT( 0x00442000, 0x8902442a ),	// a & b
	JSLL_INIT( 0xfe7fffb5, 0xd9fede3b ),	// a | b
	JSLL_INIT( 0xfe3bdfb5, 0x50fc9a11 ),	// a ^ b
	JSLL_INIT( 0xd5828fda, 0x36fdb1d5 ),	// ~a
	JSLL_INIT( 0xd5828fda, 0x36fdb1d6 ),	// -a
	JSLL_INIT( 0xae04b920, 0x49c54000 ),	// a << 13
	JSLL_INIT( 0x000153eb, 0x812e4812 ),	// a >> 13 (signed)
	JSLL_INIT( 0x000153eb, 0x812e4812 ),	// a >> 13 (unsigned)
	-922595798, UINT32_C(3372371498),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xc9024e2a ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xc9024e2a ),	// (uint64_t)(uint32_t)a
	"2a7d7025c9024e2a",	// a (hexadecimal)
	"3061726629270277674",	// a (signed decimal)
	"3061726629270277674",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 15
	JSLL_INIT( 0xe4b4212e, 0xf216ccaf ),	// a
	JSLL_INIT( 0xf4db5120, 0xe37689ec ),	// b
	JSLL_INIT( 0xd98f724f, 0xd58d569b ),	// a + b
	JSLL_INIT( 0xefd8d00e, 0x0ea042c3 ),	// a - b
	JSLL_INIT( 0x877079b6, 0xe6385854 ),	// a * b
	JSLL_INIT( 0xe4900120, 0xe21688ac ),	// a & b
	JSLL_INIT( 0xf4ff712e, 0xf376cdef ),	// a | b
	JSLL_INIT( 0x106f700e, 0x11604543 ),	// a ^ b
	JSLL_INIT( 0x1b4bded1, 0x0de93350 ),	// ~a
	JSLL_INIT( 0x1b4bded1, 0x0de93351 ),	// -a
	JSLL_INIT( 0x8425de42, 0xd995e000 ),	// a << 13
	JSLL_INIT( 0xffff25a1, 0x097790b6 ),	// a >> 13 (signed)
	JSLL_INIT( 0x000725a1, 0x097790b6 ),	// a >> 13 (unsigned)
	-233386833, UINT32_C(4061580463),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xf216ccaf ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xf216ccaf ),	// (uint64_t)(uint32_t)a
	"e4b4212ef216ccaf",	// a (hexadecimal)
	"-1966910651740271441",	// a (signed decimal)
	"16479833421969280175",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 16
	JSLL_INIT( 0xdbd20e73, 0xf61fa45c ),	// a
	JSLL_INIT( 0x65ff9a4e, 0x9fae78fe ),	// b
	JSLL_INIT( 0x41d1a8c2, 0x95ce1d5a ),	// a + b
	JSLL_INIT( 0x75d27425, 0x56712b5e ),	// a - b
	JSLL_INIT( 0x74070f0b, 0xe2f83348 ),	// a * b
	JSLL_INIT( 0x41d20a42, 0x960e205c ),	// a & b
	JSLL_INIT( 0xffff9e7f, 0xffbffcfe ),	// a | b
	JSLL_INIT( 0xbe2d943d, 0x69b1dca2 ),	// a ^ b
	JSLL_INIT( 0x242df18c, 0x09e05ba3 ),	// ~a
	JSLL_INIT( 0x242df18c, 0x09e05ba4 ),	// -a
	JSLL_INIT( 0x41ce7ec3, 0xf48b8000 ),	// a << 13
	JSLL_INIT( 0xfffede90, 0x739fb0fd ),	// a >> 13 (signed)
	JSLL_INIT( 0x0006de90, 0x739fb0fd ),	// a >> 13 (unsigned)
	-165698468, UINT32_C(4129268828),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0xf61fa45c ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0xf61fa45c ),	// (uint64_t)(uint32_t)a
	"dbd20e73f61fa45c",	// a (hexadecimal)
	"-2607005343080799140",	// a (signed decimal)
	"15839738730628752476",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 17
	JSLL_INIT( 0xe9354b44, 0x5c9b26fa ),	// a
	JSLL_INIT( 0xf343c892, 0xd62085fb ),	// b
	JSLL_INIT( 0xdc7913d7, 0x32bbacf5 ),	// a + b
	JSLL_INIT( 0xf5f182b1, 0x867aa0ff ),	// a - b
	JSLL_INIT( 0x6dae20b1, 0x429f191e ),	// a * b
	JSLL_INIT( 0xe1014800, 0x540004fa ),	// a & b
	JSLL_INIT( 0xfb77cbd6, 0xdebba7fb ),	// a | b
	JSLL_INIT( 0x1a7683d6, 0x8abba301 ),	// a ^ b
	JSLL_INIT( 0x16cab4bb, 0xa364d905 ),	// ~a
	JSLL_INIT( 0x16cab4bb, 0xa364d906 ),	// -a
	JSLL_INIT( 0xa9688b93, 0x64df4000 ),	// a << 13
	JSLL_INIT( 0xffff49aa, 0x5a22e4d9 ),	// a >> 13 (signed)
	JSLL_INIT( 0x000749aa, 0x5a22e4d9 ),	// a >> 13 (unsigned)
	1553671930, UINT32_C(1553671930),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x5c9b26fa ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x5c9b26fa ),	// (uint64_t)(uint32_t)a
	"e9354b445c9b26fa",	// a (hexadecimal)
	"-1642323732123146502",	// a (signed decimal)
	"16804420341586405114",	// a (unsigned decimal)
	FALSE, TRUE,	// a > b, a < b (unsigned)
	FALSE, TRUE,	// a > b, a < b (signed)
},
{ // record 18
	JSLL_INIT( 0xe18d185d, 0x251b3fe6 ),	// a
	JSLL_INIT( 0x9e9dc3f0, 0x25d7b77c ),	// b
	JSLL_INIT( 0x802adc4d, 0x4af2f762 ),	// a + b
	JSLL_INIT( 0x42ef546c, 0xff43886a ),	// a - b
	JSLL_INIT( 0xb89f9663, 0x5c0a5d68 ),	// a * b
	JSLL_INIT( 0x808d0050, 0x25133764 ),	// a & b
	JSLL_INIT( 0xff9ddbfd, 0x25dfbffe ),	// a | b
	JSLL_INIT( 0x7f10dbad, 0x00cc889a ),	// a ^ b
	JSLL_INIT( 0x1e72e7a2, 0xdae4c019 ),	// ~a
	JSLL_INIT( 0x1e72e7a2, 0xdae4c01a ),	// -a
	JSLL_INIT( 0xa30ba4a3, 0x67fcc000 ),	// a << 13
	JSLL_INIT( 0xffff0c68, 0xc2e928d9 ),	// a >> 13 (signed)
	JSLL_INIT( 0x00070c68, 0xc2e928d9 ),	// a >> 13 (unsigned)
	622542822, UINT32_C(622542822),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0x00000000, 0x251b3fe6 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x251b3fe6 ),	// (uint64_t)(uint32_t)a
	"e18d185d251b3fe6",	// a (hexadecimal)
	"-2194070655125995546",	// a (signed decimal)
	"16252673418583556070",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
{ // record 19
	JSLL_INIT( 0x4eb5b610, 0x82660fd8 ),	// a
	JSLL_INIT( 0x30020827, 0xef9a8c89 ),	// b
	JSLL_INIT( 0x7eb7be38, 0x72009c61 ),	// a + b
	JSLL_INIT( 0x1eb3ade8, 0x92cb834f ),	// a - b
	JSLL_INIT( 0x1c365a3d, 0xc9389a98 ),	// a * b
	JSLL_INIT( 0x00000000, 0x82020c88 ),	// a & b
	JSLL_INIT( 0x7eb7be37, 0xeffe8fd9 ),	// a | b
	JSLL_INIT( 0x7eb7be37, 0x6dfc8351 ),	// a ^ b
	JSLL_INIT( 0xb14a49ef, 0x7d99f027 ),	// ~a
	JSLL_INIT( 0xb14a49ef, 0x7d99f028 ),	// -a
	JSLL_INIT( 0xb6c2104c, 0xc1fb0000 ),	// a << 13
	JSLL_INIT( 0x000275ad, 0xb0841330 ),	// a >> 13 (signed)
	JSLL_INIT( 0x000275ad, 0xb0841330 ),	// a >> 13 (unsigned)
	-2107240488, UINT32_C(2187726808),	// (int32_t) a, (uint32_t) a
	JSLL_INIT( 0xffffffff, 0x82660fd8 ),	// (int64_t)(int32_t)a
	JSLL_INIT( 0x00000000, 0x82660fd8 ),	// (uint64_t)(uint32_t)a
	"4eb5b61082660fd8",	// a (hexadecimal)
	"5671639487766466520",	// a (signed decimal)
	"5671639487766466520",	// a (unsigned decimal)
	TRUE, FALSE,	// a > b, a < b (unsigned)
	TRUE, FALSE,	// a > b, a < b (signed)
},
};
typedef struct shiftrec_t {
   JSUint64 shl, ushr;
   JSInt64 shr;
} shiftrec_t;
typedef struct shifttest_t {
   JSUint64 base;
   shiftrec_t shift[63];
} shifttest_t;
const shifttest_t shift_tests[] = {
	{ JSLL_INIT( 0x6a9fc644, 0x236e26bb ),	// record 0
	 {
		{ JSLL_INIT( 0xd53f8c88, 0x46dc4d76 ),	// shift left 1
		  JSLL_INIT( 0x354fe322, 0x11b7135d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x354fe322, 0x11b7135d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaa7f1910, 0x8db89aec ),	// shift left 2
		  JSLL_INIT( 0x1aa7f191, 0x08db89ae ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x1aa7f191, 0x08db89ae )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x54fe3221, 0x1b7135d8 ),	// shift left 3
		  JSLL_INIT( 0x0d53f8c8, 0x846dc4d7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0d53f8c8, 0x846dc4d7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa9fc6442, 0x36e26bb0 ),	// shift left 4
		  JSLL_INIT( 0x06a9fc64, 0x4236e26b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x06a9fc64, 0x4236e26b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x53f8c884, 0x6dc4d760 ),	// shift left 5
		  JSLL_INIT( 0x0354fe32, 0x211b7135 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0354fe32, 0x211b7135 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa7f19108, 0xdb89aec0 ),	// shift left 6
		  JSLL_INIT( 0x01aa7f19, 0x108db89a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x01aa7f19, 0x108db89a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4fe32211, 0xb7135d80 ),	// shift left 7
		  JSLL_INIT( 0x00d53f8c, 0x8846dc4d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00d53f8c, 0x8846dc4d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9fc64423, 0x6e26bb00 ),	// shift left 8
		  JSLL_INIT( 0x006a9fc6, 0x44236e26 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x006a9fc6, 0x44236e26 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3f8c8846, 0xdc4d7600 ),	// shift left 9
		  JSLL_INIT( 0x00354fe3, 0x2211b713 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00354fe3, 0x2211b713 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7f19108d, 0xb89aec00 ),	// shift left 10
		  JSLL_INIT( 0x001aa7f1, 0x9108db89 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x001aa7f1, 0x9108db89 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfe32211b, 0x7135d800 ),	// shift left 11
		  JSLL_INIT( 0x000d53f8, 0xc8846dc4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000d53f8, 0xc8846dc4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfc644236, 0xe26bb000 ),	// shift left 12
		  JSLL_INIT( 0x0006a9fc, 0x644236e2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0006a9fc, 0x644236e2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf8c8846d, 0xc4d76000 ),	// shift left 13
		  JSLL_INIT( 0x000354fe, 0x32211b71 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000354fe, 0x32211b71 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf19108db, 0x89aec000 ),	// shift left 14
		  JSLL_INIT( 0x0001aa7f, 0x19108db8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0001aa7f, 0x19108db8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe32211b7, 0x135d8000 ),	// shift left 15
		  JSLL_INIT( 0x0000d53f, 0x8c8846dc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000d53f, 0x8c8846dc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc644236e, 0x26bb0000 ),	// shift left 16
		  JSLL_INIT( 0x00006a9f, 0xc644236e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00006a9f, 0xc644236e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8c8846dc, 0x4d760000 ),	// shift left 17
		  JSLL_INIT( 0x0000354f, 0xe32211b7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000354f, 0xe32211b7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x19108db8, 0x9aec0000 ),	// shift left 18
		  JSLL_INIT( 0x00001aa7, 0xf19108db ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00001aa7, 0xf19108db )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x32211b71, 0x35d80000 ),	// shift left 19
		  JSLL_INIT( 0x00000d53, 0xf8c8846d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000d53, 0xf8c8846d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x644236e2, 0x6bb00000 ),	// shift left 20
		  JSLL_INIT( 0x000006a9, 0xfc644236 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000006a9, 0xfc644236 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc8846dc4, 0xd7600000 ),	// shift left 21
		  JSLL_INIT( 0x00000354, 0xfe32211b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000354, 0xfe32211b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9108db89, 0xaec00000 ),	// shift left 22
		  JSLL_INIT( 0x000001aa, 0x7f19108d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000001aa, 0x7f19108d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2211b713, 0x5d800000 ),	// shift left 23
		  JSLL_INIT( 0x000000d5, 0x3f8c8846 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000000d5, 0x3f8c8846 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x44236e26, 0xbb000000 ),	// shift left 24
		  JSLL_INIT( 0x0000006a, 0x9fc64423 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000006a, 0x9fc64423 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8846dc4d, 0x76000000 ),	// shift left 25
		  JSLL_INIT( 0x00000035, 0x4fe32211 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000035, 0x4fe32211 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x108db89a, 0xec000000 ),	// shift left 26
		  JSLL_INIT( 0x0000001a, 0xa7f19108 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000001a, 0xa7f19108 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x211b7135, 0xd8000000 ),	// shift left 27
		  JSLL_INIT( 0x0000000d, 0x53f8c884 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000000d, 0x53f8c884 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4236e26b, 0xb0000000 ),	// shift left 28
		  JSLL_INIT( 0x00000006, 0xa9fc6442 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000006, 0xa9fc6442 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x846dc4d7, 0x60000000 ),	// shift left 29
		  JSLL_INIT( 0x00000003, 0x54fe3221 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000003, 0x54fe3221 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x08db89ae, 0xc0000000 ),	// shift left 30
		  JSLL_INIT( 0x00000001, 0xaa7f1910 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000001, 0xaa7f1910 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x11b7135d, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000000, 0xd53f8c88 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0xd53f8c88 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x236e26bb, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x6a9fc644 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x6a9fc644 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x46dc4d76, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x354fe322 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x354fe322 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8db89aec, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x1aa7f191 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x1aa7f191 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1b7135d8, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x0d53f8c8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0d53f8c8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x36e26bb0, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x06a9fc64 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x06a9fc64 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6dc4d760, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x0354fe32 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0354fe32 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdb89aec0, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x01aa7f19 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x01aa7f19 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb7135d80, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x00d53f8c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00d53f8c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6e26bb00, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x006a9fc6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x006a9fc6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdc4d7600, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x00354fe3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00354fe3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb89aec00, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x001aa7f1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x001aa7f1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7135d800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x000d53f8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000d53f8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe26bb000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x0006a9fc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0006a9fc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc4d76000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x000354fe ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000354fe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x89aec000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x0001aa7f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0001aa7f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x135d8000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x0000d53f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000d53f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x26bb0000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x00006a9f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00006a9f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4d760000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x0000354f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000354f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9aec0000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x00001aa7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00001aa7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x35d80000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x00000d53 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000d53 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6bb00000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x000006a9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000006a9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd7600000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x00000354 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000354 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaec00000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x000001aa ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000001aa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5d800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x000000d5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000000d5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbb000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x0000006a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000006a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x76000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x00000035 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000035 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xec000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x0000001a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000001a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd8000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x0000000d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000000d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb0000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000006 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000006 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000003 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000003 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000001 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0x9a697d73, 0x7c03b60f ),	// record 1
	 {
		{ JSLL_INIT( 0x34d2fae6, 0xf8076c1e ),	// shift left 1
		  JSLL_INIT( 0x4d34beb9, 0xbe01db07 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xcd34beb9, 0xbe01db07 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x69a5f5cd, 0xf00ed83c ),	// shift left 2
		  JSLL_INIT( 0x269a5f5c, 0xdf00ed83 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xe69a5f5c, 0xdf00ed83 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd34beb9b, 0xe01db078 ),	// shift left 3
		  JSLL_INIT( 0x134d2fae, 0x6f8076c1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf34d2fae, 0x6f8076c1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa697d737, 0xc03b60f0 ),	// shift left 4
		  JSLL_INIT( 0x09a697d7, 0x37c03b60 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf9a697d7, 0x37c03b60 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4d2fae6f, 0x8076c1e0 ),	// shift left 5
		  JSLL_INIT( 0x04d34beb, 0x9be01db0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfcd34beb, 0x9be01db0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9a5f5cdf, 0x00ed83c0 ),	// shift left 6
		  JSLL_INIT( 0x0269a5f5, 0xcdf00ed8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfe69a5f5, 0xcdf00ed8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x34beb9be, 0x01db0780 ),	// shift left 7
		  JSLL_INIT( 0x0134d2fa, 0xe6f8076c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff34d2fa, 0xe6f8076c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x697d737c, 0x03b60f00 ),	// shift left 8
		  JSLL_INIT( 0x009a697d, 0x737c03b6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff9a697d, 0x737c03b6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd2fae6f8, 0x076c1e00 ),	// shift left 9
		  JSLL_INIT( 0x004d34be, 0xb9be01db ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffcd34be, 0xb9be01db )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa5f5cdf0, 0x0ed83c00 ),	// shift left 10
		  JSLL_INIT( 0x00269a5f, 0x5cdf00ed ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffe69a5f, 0x5cdf00ed )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4beb9be0, 0x1db07800 ),	// shift left 11
		  JSLL_INIT( 0x00134d2f, 0xae6f8076 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff34d2f, 0xae6f8076 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x97d737c0, 0x3b60f000 ),	// shift left 12
		  JSLL_INIT( 0x0009a697, 0xd737c03b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff9a697, 0xd737c03b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2fae6f80, 0x76c1e000 ),	// shift left 13
		  JSLL_INIT( 0x0004d34b, 0xeb9be01d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffcd34b, 0xeb9be01d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5f5cdf00, 0xed83c000 ),	// shift left 14
		  JSLL_INIT( 0x000269a5, 0xf5cdf00e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffe69a5, 0xf5cdf00e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbeb9be01, 0xdb078000 ),	// shift left 15
		  JSLL_INIT( 0x000134d2, 0xfae6f807 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff34d2, 0xfae6f807 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7d737c03, 0xb60f0000 ),	// shift left 16
		  JSLL_INIT( 0x00009a69, 0x7d737c03 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff9a69, 0x7d737c03 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfae6f807, 0x6c1e0000 ),	// shift left 17
		  JSLL_INIT( 0x00004d34, 0xbeb9be01 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffcd34, 0xbeb9be01 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf5cdf00e, 0xd83c0000 ),	// shift left 18
		  JSLL_INIT( 0x0000269a, 0x5f5cdf00 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffe69a, 0x5f5cdf00 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeb9be01d, 0xb0780000 ),	// shift left 19
		  JSLL_INIT( 0x0000134d, 0x2fae6f80 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff34d, 0x2fae6f80 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd737c03b, 0x60f00000 ),	// shift left 20
		  JSLL_INIT( 0x000009a6, 0x97d737c0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff9a6, 0x97d737c0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xae6f8076, 0xc1e00000 ),	// shift left 21
		  JSLL_INIT( 0x000004d3, 0x4beb9be0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffcd3, 0x4beb9be0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5cdf00ed, 0x83c00000 ),	// shift left 22
		  JSLL_INIT( 0x00000269, 0xa5f5cdf0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffe69, 0xa5f5cdf0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb9be01db, 0x07800000 ),	// shift left 23
		  JSLL_INIT( 0x00000134, 0xd2fae6f8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff34, 0xd2fae6f8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x737c03b6, 0x0f000000 ),	// shift left 24
		  JSLL_INIT( 0x0000009a, 0x697d737c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff9a, 0x697d737c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe6f8076c, 0x1e000000 ),	// shift left 25
		  JSLL_INIT( 0x0000004d, 0x34beb9be ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffcd, 0x34beb9be )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcdf00ed8, 0x3c000000 ),	// shift left 26
		  JSLL_INIT( 0x00000026, 0x9a5f5cdf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffe6, 0x9a5f5cdf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9be01db0, 0x78000000 ),	// shift left 27
		  JSLL_INIT( 0x00000013, 0x4d2fae6f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff3, 0x4d2fae6f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x37c03b60, 0xf0000000 ),	// shift left 28
		  JSLL_INIT( 0x00000009, 0xa697d737 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff9, 0xa697d737 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6f8076c1, 0xe0000000 ),	// shift left 29
		  JSLL_INIT( 0x00000004, 0xd34beb9b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffc, 0xd34beb9b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdf00ed83, 0xc0000000 ),	// shift left 30
		  JSLL_INIT( 0x00000002, 0x69a5f5cd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffe, 0x69a5f5cd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbe01db07, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000001, 0x34d2fae6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x34d2fae6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7c03b60f, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x9a697d73 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x9a697d73 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf8076c1e, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x4d34beb9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xcd34beb9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf00ed83c, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x269a5f5c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xe69a5f5c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe01db078, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x134d2fae ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf34d2fae )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc03b60f0, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x09a697d7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf9a697d7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8076c1e0, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x04d34beb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfcd34beb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x00ed83c0, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x0269a5f5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfe69a5f5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x01db0780, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x0134d2fa ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff34d2fa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x03b60f00, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x009a697d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff9a697d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x076c1e00, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x004d34be ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffcd34be )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0ed83c00, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x00269a5f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffe69a5f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1db07800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x00134d2f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff34d2f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3b60f000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x0009a697 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff9a697 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x76c1e000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x0004d34b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffcd34b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xed83c000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x000269a5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffe69a5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdb078000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x000134d2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff34d2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb60f0000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x00009a69 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff9a69 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6c1e0000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x00004d34 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffcd34 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd83c0000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x0000269a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffe69a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb0780000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x0000134d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff34d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60f00000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x000009a6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff9a6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc1e00000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x000004d3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffcd3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x83c00000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x00000269 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffe69 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x07800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x00000134 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff34 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0f000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x0000009a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff9a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1e000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x0000004d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffcd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3c000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000026 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffe6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x78000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000013 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf0000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000009 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe0000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000004 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000002 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffff )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0x42aeff26, 0xcf5f35eb ),	// record 2
	 {
		{ JSLL_INIT( 0x855dfe4d, 0x9ebe6bd6 ),	// shift left 1
		  JSLL_INIT( 0x21577f93, 0x67af9af5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x21577f93, 0x67af9af5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0abbfc9b, 0x3d7cd7ac ),	// shift left 2
		  JSLL_INIT( 0x10abbfc9, 0xb3d7cd7a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x10abbfc9, 0xb3d7cd7a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1577f936, 0x7af9af58 ),	// shift left 3
		  JSLL_INIT( 0x0855dfe4, 0xd9ebe6bd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0855dfe4, 0xd9ebe6bd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2aeff26c, 0xf5f35eb0 ),	// shift left 4
		  JSLL_INIT( 0x042aeff2, 0x6cf5f35e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x042aeff2, 0x6cf5f35e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x55dfe4d9, 0xebe6bd60 ),	// shift left 5
		  JSLL_INIT( 0x021577f9, 0x367af9af ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x021577f9, 0x367af9af )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xabbfc9b3, 0xd7cd7ac0 ),	// shift left 6
		  JSLL_INIT( 0x010abbfc, 0x9b3d7cd7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x010abbfc, 0x9b3d7cd7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x577f9367, 0xaf9af580 ),	// shift left 7
		  JSLL_INIT( 0x00855dfe, 0x4d9ebe6b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00855dfe, 0x4d9ebe6b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaeff26cf, 0x5f35eb00 ),	// shift left 8
		  JSLL_INIT( 0x0042aeff, 0x26cf5f35 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0042aeff, 0x26cf5f35 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5dfe4d9e, 0xbe6bd600 ),	// shift left 9
		  JSLL_INIT( 0x0021577f, 0x9367af9a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0021577f, 0x9367af9a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbbfc9b3d, 0x7cd7ac00 ),	// shift left 10
		  JSLL_INIT( 0x0010abbf, 0xc9b3d7cd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0010abbf, 0xc9b3d7cd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x77f9367a, 0xf9af5800 ),	// shift left 11
		  JSLL_INIT( 0x000855df, 0xe4d9ebe6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000855df, 0xe4d9ebe6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeff26cf5, 0xf35eb000 ),	// shift left 12
		  JSLL_INIT( 0x00042aef, 0xf26cf5f3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00042aef, 0xf26cf5f3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdfe4d9eb, 0xe6bd6000 ),	// shift left 13
		  JSLL_INIT( 0x00021577, 0xf9367af9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00021577, 0xf9367af9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbfc9b3d7, 0xcd7ac000 ),	// shift left 14
		  JSLL_INIT( 0x00010abb, 0xfc9b3d7c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00010abb, 0xfc9b3d7c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7f9367af, 0x9af58000 ),	// shift left 15
		  JSLL_INIT( 0x0000855d, 0xfe4d9ebe ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000855d, 0xfe4d9ebe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xff26cf5f, 0x35eb0000 ),	// shift left 16
		  JSLL_INIT( 0x000042ae, 0xff26cf5f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000042ae, 0xff26cf5f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfe4d9ebe, 0x6bd60000 ),	// shift left 17
		  JSLL_INIT( 0x00002157, 0x7f9367af ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00002157, 0x7f9367af )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfc9b3d7c, 0xd7ac0000 ),	// shift left 18
		  JSLL_INIT( 0x000010ab, 0xbfc9b3d7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x000010ab, 0xbfc9b3d7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf9367af9, 0xaf580000 ),	// shift left 19
		  JSLL_INIT( 0x00000855, 0xdfe4d9eb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000855, 0xdfe4d9eb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf26cf5f3, 0x5eb00000 ),	// shift left 20
		  JSLL_INIT( 0x0000042a, 0xeff26cf5 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000042a, 0xeff26cf5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe4d9ebe6, 0xbd600000 ),	// shift left 21
		  JSLL_INIT( 0x00000215, 0x77f9367a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000215, 0x77f9367a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc9b3d7cd, 0x7ac00000 ),	// shift left 22
		  JSLL_INIT( 0x0000010a, 0xbbfc9b3d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x0000010a, 0xbbfc9b3d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9367af9a, 0xf5800000 ),	// shift left 23
		  JSLL_INIT( 0x00000085, 0x5dfe4d9e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000085, 0x5dfe4d9e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x26cf5f35, 0xeb000000 ),	// shift left 24
		  JSLL_INIT( 0x00000042, 0xaeff26cf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000042, 0xaeff26cf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x4d9ebe6b, 0xd6000000 ),	// shift left 25
		  JSLL_INIT( 0x00000021, 0x577f9367 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000021, 0x577f9367 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9b3d7cd7, 0xac000000 ),	// shift left 26
		  JSLL_INIT( 0x00000010, 0xabbfc9b3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000010, 0xabbfc9b3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x367af9af, 0x58000000 ),	// shift left 27
		  JSLL_INIT( 0x00000008, 0x55dfe4d9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000008, 0x55dfe4d9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6cf5f35e, 0xb0000000 ),	// shift left 28
		  JSLL_INIT( 0x00000004, 0x2aeff26c ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000004, 0x2aeff26c )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd9ebe6bd, 0x60000000 ),	// shift left 29
		  JSLL_INIT( 0x00000002, 0x1577f936 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000002, 0x1577f936 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb3d7cd7a, 0xc0000000 ),	// shift left 30
		  JSLL_INIT( 0x00000001, 0x0abbfc9b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000001, 0x0abbfc9b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x67af9af5, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000000, 0x855dfe4d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x855dfe4d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcf5f35eb, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0x42aeff26 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x42aeff26 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9ebe6bd6, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x21577f93 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x21577f93 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3d7cd7ac, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x10abbfc9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x10abbfc9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7af9af58, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x0855dfe4 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0855dfe4 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf5f35eb0, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x042aeff2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x042aeff2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xebe6bd60, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x021577f9 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x021577f9 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd7cd7ac0, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x010abbfc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x010abbfc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaf9af580, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x00855dfe ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00855dfe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5f35eb00, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x0042aeff ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0042aeff )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbe6bd600, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x0021577f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0021577f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7cd7ac00, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x0010abbf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0010abbf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf9af5800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x000855df ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000855df )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf35eb000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x00042aef ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00042aef )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe6bd6000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x00021577 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00021577 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcd7ac000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x00010abb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00010abb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9af58000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x0000855d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000855d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x35eb0000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x000042ae ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000042ae )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6bd60000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x00002157 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00002157 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd7ac0000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x000010ab ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x000010ab )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xaf580000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x00000855 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000855 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5eb00000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x0000042a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000042a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbd600000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x00000215 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000215 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7ac00000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x0000010a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x0000010a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf5800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x00000085 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000085 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeb000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x00000042 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000042 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd6000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x00000021 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000021 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xac000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x00000010 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000010 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x58000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000008 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000008 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb0000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x00000004 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000004 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x60000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000002 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000002 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000001 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000000 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0x00000000, 0x00000000 )	// shift right (arithmetic/signed)
		},
	 },
	},
	{ JSLL_INIT( 0xaf37f8ee, 0xb0ab7e05 ),	// record 3
	 {
		{ JSLL_INIT( 0x5e6ff1dd, 0x6156fc0a ),	// shift left 1
		  JSLL_INIT( 0x579bfc77, 0x5855bf02 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xd79bfc77, 0x5855bf02 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbcdfe3ba, 0xc2adf814 ),	// shift left 2
		  JSLL_INIT( 0x2bcdfe3b, 0xac2adf81 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xebcdfe3b, 0xac2adf81 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x79bfc775, 0x855bf028 ),	// shift left 3
		  JSLL_INIT( 0x15e6ff1d, 0xd6156fc0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xf5e6ff1d, 0xd6156fc0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf37f8eeb, 0x0ab7e050 ),	// shift left 4
		  JSLL_INIT( 0x0af37f8e, 0xeb0ab7e0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfaf37f8e, 0xeb0ab7e0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe6ff1dd6, 0x156fc0a0 ),	// shift left 5
		  JSLL_INIT( 0x0579bfc7, 0x75855bf0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfd79bfc7, 0x75855bf0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xcdfe3bac, 0x2adf8140 ),	// shift left 6
		  JSLL_INIT( 0x02bcdfe3, 0xbac2adf8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfebcdfe3, 0xbac2adf8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x9bfc7758, 0x55bf0280 ),	// shift left 7
		  JSLL_INIT( 0x015e6ff1, 0xdd6156fc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xff5e6ff1, 0xdd6156fc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x37f8eeb0, 0xab7e0500 ),	// shift left 8
		  JSLL_INIT( 0x00af37f8, 0xeeb0ab7e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffaf37f8, 0xeeb0ab7e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6ff1dd61, 0x56fc0a00 ),	// shift left 9
		  JSLL_INIT( 0x00579bfc, 0x775855bf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffd79bfc, 0x775855bf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdfe3bac2, 0xadf81400 ),	// shift left 10
		  JSLL_INIT( 0x002bcdfe, 0x3bac2adf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffebcdfe, 0x3bac2adf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbfc77585, 0x5bf02800 ),	// shift left 11
		  JSLL_INIT( 0x0015e6ff, 0x1dd6156f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfff5e6ff, 0x1dd6156f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7f8eeb0a, 0xb7e05000 ),	// shift left 12
		  JSLL_INIT( 0x000af37f, 0x8eeb0ab7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffaf37f, 0x8eeb0ab7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xff1dd615, 0x6fc0a000 ),	// shift left 13
		  JSLL_INIT( 0x000579bf, 0xc775855b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffd79bf, 0xc775855b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfe3bac2a, 0xdf814000 ),	// shift left 14
		  JSLL_INIT( 0x0002bcdf, 0xe3bac2ad ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffebcdf, 0xe3bac2ad )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfc775855, 0xbf028000 ),	// shift left 15
		  JSLL_INIT( 0x00015e6f, 0xf1dd6156 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffff5e6f, 0xf1dd6156 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf8eeb0ab, 0x7e050000 ),	// shift left 16
		  JSLL_INIT( 0x0000af37, 0xf8eeb0ab ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffaf37, 0xf8eeb0ab )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf1dd6156, 0xfc0a0000 ),	// shift left 17
		  JSLL_INIT( 0x0000579b, 0xfc775855 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffd79b, 0xfc775855 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe3bac2ad, 0xf8140000 ),	// shift left 18
		  JSLL_INIT( 0x00002bcd, 0xfe3bac2a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffebcd, 0xfe3bac2a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc775855b, 0xf0280000 ),	// shift left 19
		  JSLL_INIT( 0x000015e6, 0xff1dd615 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffff5e6, 0xff1dd615 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x8eeb0ab7, 0xe0500000 ),	// shift left 20
		  JSLL_INIT( 0x00000af3, 0x7f8eeb0a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffaf3, 0x7f8eeb0a )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x1dd6156f, 0xc0a00000 ),	// shift left 21
		  JSLL_INIT( 0x00000579, 0xbfc77585 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffd79, 0xbfc77585 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x3bac2adf, 0x81400000 ),	// shift left 22
		  JSLL_INIT( 0x000002bc, 0xdfe3bac2 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffebc, 0xdfe3bac2 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x775855bf, 0x02800000 ),	// shift left 23
		  JSLL_INIT( 0x0000015e, 0x6ff1dd61 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffff5e, 0x6ff1dd61 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeeb0ab7e, 0x05000000 ),	// shift left 24
		  JSLL_INIT( 0x000000af, 0x37f8eeb0 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffaf, 0x37f8eeb0 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdd6156fc, 0x0a000000 ),	// shift left 25
		  JSLL_INIT( 0x00000057, 0x9bfc7758 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffd7, 0x9bfc7758 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbac2adf8, 0x14000000 ),	// shift left 26
		  JSLL_INIT( 0x0000002b, 0xcdfe3bac ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffeb, 0xcdfe3bac )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x75855bf0, 0x28000000 ),	// shift left 27
		  JSLL_INIT( 0x00000015, 0xe6ff1dd6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffff5, 0xe6ff1dd6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xeb0ab7e0, 0x50000000 ),	// shift left 28
		  JSLL_INIT( 0x0000000a, 0xf37f8eeb ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffa, 0xf37f8eeb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xd6156fc0, 0xa0000000 ),	// shift left 29
		  JSLL_INIT( 0x00000005, 0x79bfc775 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffd, 0x79bfc775 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xac2adf81, 0x40000000 ),	// shift left 30
		  JSLL_INIT( 0x00000002, 0xbcdfe3ba ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xfffffffe, 0xbcdfe3ba )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5855bf02, 0x80000000 ),	// shift left 31
		  JSLL_INIT( 0x00000001, 0x5e6ff1dd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0x5e6ff1dd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb0ab7e05, 0x00000000 ),	// shift left 32
		  JSLL_INIT( 0x00000000, 0xaf37f8ee ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xaf37f8ee )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6156fc0a, 0x00000000 ),	// shift left 33
		  JSLL_INIT( 0x00000000, 0x579bfc77 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xd79bfc77 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc2adf814, 0x00000000 ),	// shift left 34
		  JSLL_INIT( 0x00000000, 0x2bcdfe3b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xebcdfe3b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x855bf028, 0x00000000 ),	// shift left 35
		  JSLL_INIT( 0x00000000, 0x15e6ff1d ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xf5e6ff1d )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0ab7e050, 0x00000000 ),	// shift left 36
		  JSLL_INIT( 0x00000000, 0x0af37f8e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfaf37f8e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x156fc0a0, 0x00000000 ),	// shift left 37
		  JSLL_INIT( 0x00000000, 0x0579bfc7 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfd79bfc7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x2adf8140, 0x00000000 ),	// shift left 38
		  JSLL_INIT( 0x00000000, 0x02bcdfe3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfebcdfe3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x55bf0280, 0x00000000 ),	// shift left 39
		  JSLL_INIT( 0x00000000, 0x015e6ff1 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xff5e6ff1 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xab7e0500, 0x00000000 ),	// shift left 40
		  JSLL_INIT( 0x00000000, 0x00af37f8 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffaf37f8 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x56fc0a00, 0x00000000 ),	// shift left 41
		  JSLL_INIT( 0x00000000, 0x00579bfc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffd79bfc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xadf81400, 0x00000000 ),	// shift left 42
		  JSLL_INIT( 0x00000000, 0x002bcdfe ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffebcdfe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x5bf02800, 0x00000000 ),	// shift left 43
		  JSLL_INIT( 0x00000000, 0x0015e6ff ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfff5e6ff )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xb7e05000, 0x00000000 ),	// shift left 44
		  JSLL_INIT( 0x00000000, 0x000af37f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffaf37f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x6fc0a000, 0x00000000 ),	// shift left 45
		  JSLL_INIT( 0x00000000, 0x000579bf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffd79bf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xdf814000, 0x00000000 ),	// shift left 46
		  JSLL_INIT( 0x00000000, 0x0002bcdf ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffebcdf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xbf028000, 0x00000000 ),	// shift left 47
		  JSLL_INIT( 0x00000000, 0x00015e6f ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffff5e6f )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x7e050000, 0x00000000 ),	// shift left 48
		  JSLL_INIT( 0x00000000, 0x0000af37 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffaf37 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xfc0a0000, 0x00000000 ),	// shift left 49
		  JSLL_INIT( 0x00000000, 0x0000579b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffd79b )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf8140000, 0x00000000 ),	// shift left 50
		  JSLL_INIT( 0x00000000, 0x00002bcd ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffebcd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xf0280000, 0x00000000 ),	// shift left 51
		  JSLL_INIT( 0x00000000, 0x000015e6 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffff5e6 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xe0500000, 0x00000000 ),	// shift left 52
		  JSLL_INIT( 0x00000000, 0x00000af3 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffaf3 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xc0a00000, 0x00000000 ),	// shift left 53
		  JSLL_INIT( 0x00000000, 0x00000579 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffd79 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x81400000, 0x00000000 ),	// shift left 54
		  JSLL_INIT( 0x00000000, 0x000002bc ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffebc )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x02800000, 0x00000000 ),	// shift left 55
		  JSLL_INIT( 0x00000000, 0x0000015e ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffff5e )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x05000000, 0x00000000 ),	// shift left 56
		  JSLL_INIT( 0x00000000, 0x000000af ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffaf )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x0a000000, 0x00000000 ),	// shift left 57
		  JSLL_INIT( 0x00000000, 0x00000057 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffd7 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x14000000, 0x00000000 ),	// shift left 58
		  JSLL_INIT( 0x00000000, 0x0000002b ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffeb )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x28000000, 0x00000000 ),	// shift left 59
		  JSLL_INIT( 0x00000000, 0x00000015 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffff5 )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x50000000, 0x00000000 ),	// shift left 60
		  JSLL_INIT( 0x00000000, 0x0000000a ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffa )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0xa0000000, 0x00000000 ),	// shift left 61
		  JSLL_INIT( 0x00000000, 0x00000005 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffd )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x40000000, 0x00000000 ),	// shift left 62
		  JSLL_INIT( 0x00000000, 0x00000002 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xfffffffe )	// shift right (arithmetic/signed)
		},
		{ JSLL_INIT( 0x80000000, 0x00000000 ),	// shift left 63
		  JSLL_INIT( 0x00000000, 0x00000001 ),	// shift right (logical/unsigned)
		  JSLL_INIT( 0xffffffff, 0xffffffff )	// shift right (arithmetic/signed)
		},
	 },
	},
};
